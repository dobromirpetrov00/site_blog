{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\React Apps\\\\dandg_website\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Mobile from \"./windowSizeJSX/isMobile\";\nimport DesktopMedium from \"./windowSizeJSX/isDesktopMedium\";\nimport DesktopLarge from \"./windowSizeJSX/isDesktopLarge\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isMobile = useMediaQuery({\n    maxWidth: 680\n  });\n  const isDesktopMedium = useMediaQuery({\n    minWidth: 681,\n    maxWidth: 999\n  });\n  const isDesktopLarge = useMediaQuery({\n    minWidth: 1000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isMobile && /*#__PURE__*/_jsxDEV(Mobile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this), isDesktopMedium && /*#__PURE__*/_jsxDEV(DesktopMedium, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 27\n    }, this), isDesktopLarge && /*#__PURE__*/_jsxDEV(DesktopLarge, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PKMB3JKY0r6v2t4Wg4Ro0CjRQMA=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/React Apps/dandg_website/src/App.js"],"names":["React","Mobile","DesktopMedium","DesktopLarge","useMediaQuery","App","isMobile","maxWidth","isDesktopMedium","minWidth","isDesktopLarge"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGF,aAAa,CAAC;AAC7BG,IAAAA,QAAQ,EAAE;AADmB,GAAD,CAA9B;AAIA,QAAMC,eAAe,GAAGJ,aAAa,CAAC;AACpCK,IAAAA,QAAQ,EAAE,GAD0B;AAEpCF,IAAAA,QAAQ,EAAE;AAF0B,GAAD,CAArC;AAKA,QAAMG,cAAc,GAAGN,aAAa,CAAC;AACnCK,IAAAA,QAAQ,EAAE;AADyB,GAAD,CAApC;AAIA,sBACE;AAAA,eACGH,QAAQ,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADf,EAEGE,eAAe,iBAAI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFtB,EAGGE,cAAc,iBAAI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBQL,G;UACUD,a,EAIOA,a,EAKDA,a;;;KAVhBC,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport Mobile from \"./windowSizeJSX/isMobile\";\nimport DesktopMedium from \"./windowSizeJSX/isDesktopMedium\";\nimport DesktopLarge from \"./windowSizeJSX/isDesktopLarge\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction App() {\n  const isMobile = useMediaQuery({\n    maxWidth: 680,\n  });\n\n  const isDesktopMedium = useMediaQuery({\n    minWidth: 681,\n    maxWidth: 999,\n  });\n\n  const isDesktopLarge = useMediaQuery({\n    minWidth: 1000,\n  });\n\n  return (\n    <div>\n      {isMobile && <Mobile />}\n      {isDesktopMedium && <DesktopMedium />}\n      {isDesktopLarge && <DesktopLarge />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}